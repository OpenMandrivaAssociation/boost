From c8fb4a42f3a8453948b5d893cfecd97c6827eee5 Mon Sep 17 00:00:00 2001
From: Andreas Schwab <schwab@suse.de>
Date: Mon, 8 Apr 2019 14:52:20 +0200
Subject: [PATCH] Add support for RISC-V LP64D

---
 build/Jamfile.v2                     |  13 +++
 build/architecture.jam               |   4 +
 src/asm/jump_riscv64_sysv_elf_gas.S  | 150 +++++++++++++++++++++++++++
 src/asm/make_riscv64_sysv_elf_gas.S  |  91 ++++++++++++++++
 src/asm/ontop_riscv64_sysv_elf_gas.S | 149 ++++++++++++++++++++++++++
 5 files changed, 407 insertions(+)
 create mode 100644 src/asm/jump_riscv64_sysv_elf_gas.S
 create mode 100644 src/asm/make_riscv64_sysv_elf_gas.S
 create mode 100644 src/asm/ontop_riscv64_sysv_elf_gas.S

diff --git a/libs/context/build/Jamfile.v2 b/libs/context/build/Jamfile.v2
index 54b97dd0..872b4f0e 100644
--- a/libs/context/build/Jamfile.v2
+++ b/libs/context/build/Jamfile.v2
@@ -412,6 +412,19 @@ alias asm_sources
      <binary-format>mach-o
    ;
 
+# RISCV64
+# RISCV64/SYSV/ELF
+alias asm_sources
+   : asm/make_riscv64_sysv_elf_gas.S
+     asm/jump_riscv64_sysv_elf_gas.S
+     asm/ontop_riscv64_sysv_elf_gas.S
+   : <abi>sysv
+     <address-model>64
+     <architecture>riscv
+     <binary-format>elf
+     <toolset>gcc
+   ;
+
 # X86
 # X86/SYSV/ELF
 alias asm_sources
diff --git a/libs/context/build/architecture.jam b/libs/context/build/architecture.jam
index 81dcb497..8c2501a3 100644
--- a/libs/context/build/architecture.jam
+++ b/libs/context/build/architecture.jam
@@ -63,6 +63,10 @@ rule deduce-architecture ( properties * )
         {
             return <architecture>power ;
         }
+        else if [ configure.builds /boost/architecture//riscv : $(properties) : riscv ]
+        {
+            return <architecture>riscv ;
+        }
         else if [ configure.builds /boost/architecture//sparc : $(properties) : sparc ]
         {
             return <architecture>sparc ;
diff --git a/libs/context/src/asm/jump_riscv64_sysv_elf_gas.S b/libs/context/src/asm/jump_riscv64_sysv_elf_gas.S
new file mode 100644
index 00000000..5417e5d5
--- /dev/null
+++ b/libs/context/src/asm/jump_riscv64_sysv_elf_gas.S
@@ -0,0 +1,150 @@
+/*
+   Distributed under the Boost Software License, Version 1.0.
+      (See accompanying file LICENSE_1_0.txt or copy at
+          http://www.boost.org/LICENSE_1_0.txt)
+*/
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
+ *  -------------------------------------------------  *
+ *  | 0x0 | 0x4 | 0x8 | 0xc | 0x10| 0x14| 0x18| 0x1c|  *
+ *  -------------------------------------------------  *
+ *  |    fs0    |    fs1    |    fs2    |    fs3    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
+ *  -------------------------------------------------  *
+ *  | 0x20| 0x24| 0x28| 0x2c| 0x30| 0x34| 0x38| 0x3c|  *
+ *  -------------------------------------------------  *
+ *  |    fs4    |    fs5    |    fs6    |    fs7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
+ *  -------------------------------------------------  *
+ *  | 0x40| 0x44| 0x48| 0x4c| 0x50| 0x54| 0x58| 0x5c|  *
+ *  -------------------------------------------------  *
+ *  |    fs8    |    fs9    |    fs10   |    fs11   |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
+ *  -------------------------------------------------  *
+ *  | 0x60| 0x64| 0x68| 0x6c| 0x70| 0x74| 0x78| 0x7c|  *
+ *  -------------------------------------------------  *
+ *  |    s0     |    s1     |    s2     |    s3     |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
+ *  -------------------------------------------------  *
+ *  | 0x80| 0x84| 0x88| 0x8c| 0x90| 0x94| 0x98| 0x9c|  *
+ *  -------------------------------------------------  *
+ *  |    s4     |    s5     |    s6     |     s7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  40 |  41 |  42 | 43  |  44 | 45  |  46 | 47  |  *
+ *  -------------------------------------------------  *
+ *  | 0xa0| 0xa4| 0xa8| 0xac| 0xb0| 0xb4| 0xb8| 0xbc|  *
+ *  -------------------------------------------------  *
+ *  |     s8    |     s9    |    s10    |    s11    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  48 |  49 |  50 | 51  |     |     |     |     |  *
+ *  -------------------------------------------------  *
+ *  | 0xc0| 0xc4| 0xc8| 0xcc|     |     |     |     |  *
+ *  -------------------------------------------------  *
+ *  |     ra    |     pc    |           |           |  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ *******************************************************/
+
+.file "jump_riscv64_sysv_elf_gas.S"
+.text
+.align  1
+.global jump_fcontext
+.type   jump_fcontext, %function
+jump_fcontext:
+    # prepare stack for GP + FPU
+    addi  sp, sp, -0xd0
+
+    # save fs0 - fs11
+    fsd  fs0, 0x00(sp)
+    fsd  fs1, 0x08(sp)
+    fsd  fs2, 0x10(sp)
+    fsd  fs3, 0x18(sp)
+    fsd  fs4, 0x20(sp)
+    fsd  fs5, 0x28(sp)
+    fsd  fs6, 0x30(sp)
+    fsd  fs7, 0x38(sp)
+    fsd  fs8, 0x40(sp)
+    fsd  fs9, 0x48(sp)
+    fsd  fs10, 0x50(sp)
+    fsd  fs11, 0x58(sp)
+
+    # save s0-s11, ra
+    sd  s0, 0x60(sp)
+    sd  s1, 0x68(sp)
+    sd  s2, 0x70(sp)
+    sd  s3, 0x78(sp)
+    sd  s4, 0x80(sp)
+    sd  s5, 0x88(sp)
+    sd  s6, 0x90(sp)
+    sd  s7, 0x98(sp)
+    sd  s8, 0xa0(sp)
+    sd  s9, 0xa8(sp)
+    sd  s10, 0xb0(sp)
+    sd  s11, 0xb8(sp)
+    sd  ra, 0xc0(sp)
+
+    # save RA as PC
+    sd  ra, 0xc8(sp)
+
+    # store SP (pointing to context-data) in A2
+    mv  a2, sp
+
+    # restore SP (pointing to context-data) from A0
+    mv  sp, a0
+
+    # load fs0 - fs11
+    fld  fs0, 0x00(sp)
+    fld  fs1, 0x08(sp)
+    fld  fs2, 0x10(sp)
+    fld  fs3, 0x18(sp)
+    fld  fs4, 0x20(sp)
+    fld  fs5, 0x28(sp)
+    fld  fs6, 0x30(sp)
+    fld  fs7, 0x38(sp)
+    fld  fs8, 0x40(sp)
+    fld  fs9, 0x48(sp)
+    fld  fs10, 0x50(sp)
+    fld  fs11, 0x58(sp)
+
+    # load s0-s11,ra
+    ld  s0, 0x60(sp)
+    ld  s1, 0x68(sp)
+    ld  s2, 0x70(sp)
+    ld  s3, 0x78(sp)
+    ld  s4, 0x80(sp)
+    ld  s5, 0x88(sp)
+    ld  s6, 0x90(sp)
+    ld  s7, 0x98(sp)
+    ld  s8, 0xa0(sp)
+    ld  s9, 0xa8(sp)
+    ld  s10, 0xb0(sp)
+    ld  s11, 0xb8(sp)
+    ld  ra, 0xc0(sp)
+
+    # return transfer_t from jump
+    # pass transfer_t as first arg in context function
+    # a0 == FCTX, a1 == DATA
+    mv a0, a2
+
+    # load pc
+    ld  a2, 0xc8(sp)
+
+    # restore stack from GP + FPU
+    addi  sp, sp, 0xd0
+
+    jr a2
+.size   jump_fcontext,.-jump_fcontext
+# Mark that we don't need executable stack.
+.section .note.GNU-stack,"",%progbits
diff --git a/libs/context/src/asm/make_riscv64_sysv_elf_gas.S b/libs/context/src/asm/make_riscv64_sysv_elf_gas.S
new file mode 100644
index 00000000..559f61df
--- /dev/null
+++ b/libs/context/src/asm/make_riscv64_sysv_elf_gas.S
@@ -0,0 +1,91 @@
+/*
+   Distributed under the Boost Software License, Version 1.0.
+      (See accompanying file LICENSE_1_0.txt or copy at
+          http://www.boost.org/LICENSE_1_0.txt)
+*/
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
+ *  -------------------------------------------------  *
+ *  | 0x0 | 0x4 | 0x8 | 0xc | 0x10| 0x14| 0x18| 0x1c|  *
+ *  -------------------------------------------------  *
+ *  |    fs0    |    fs1    |    fs2    |    fs3    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
+ *  -------------------------------------------------  *
+ *  | 0x20| 0x24| 0x28| 0x2c| 0x30| 0x34| 0x38| 0x3c|  *
+ *  -------------------------------------------------  *
+ *  |    fs4    |    fs5    |    fs6    |    fs7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
+ *  -------------------------------------------------  *
+ *  | 0x40| 0x44| 0x48| 0x4c| 0x50| 0x54| 0x58| 0x5c|  *
+ *  -------------------------------------------------  *
+ *  |    fs8    |    fs9    |    fs10   |    fs11   |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
+ *  -------------------------------------------------  *
+ *  | 0x60| 0x64| 0x68| 0x6c| 0x70| 0x74| 0x78| 0x7c|  *
+ *  -------------------------------------------------  *
+ *  |    s0     |    s1     |    s2     |    s3     |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
+ *  -------------------------------------------------  *
+ *  | 0x80| 0x84| 0x88| 0x8c| 0x90| 0x94| 0x98| 0x9c|  *
+ *  -------------------------------------------------  *
+ *  |    s4     |    s5     |    s6     |     s7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  40 |  41 |  42 | 43  |  44 | 45  |  46 | 47  |  *
+ *  -------------------------------------------------  *
+ *  | 0xa0| 0xa4| 0xa8| 0xac| 0xb0| 0xb4| 0xb8| 0xbc|  *
+ *  -------------------------------------------------  *
+ *  |     s8    |     s9    |    s10    |    s11    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  48 |  49 |  50 | 51  |     |     |     |     |  *
+ *  -------------------------------------------------  *
+ *  | 0xc0| 0xc4| 0xc8| 0xcc|     |     |     |     |  *
+ *  -------------------------------------------------  *
+ *  |     ra    |     pc    |           |           |  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ *******************************************************/
+
+.file "make_riscv64_sysv_elf_gas.S"
+.text
+.align  1
+.global make_fcontext
+.type   make_fcontext, %function
+make_fcontext:
+    # shift address in a0 (allocated stack) to lower 16 byte boundary
+    andi a0, a0, ~0xF
+
+    # reserve space for context-data on context-stack
+    addi  a0, a0, -0xd0
+
+    # third arg of make_fcontext() == address of context-function
+    # store address as a PC to jump in
+    sd  a2, 0xc8(a0)
+
+    # save address of finish as return-address for context-function
+    # will be entered after context-function returns (RA register)
+    la  a4, finish
+    sd  a4, 0xc0(a0)
+
+    ret // return pointer to context-data (a0)
+
+finish:
+    # exit code is zero
+    li  a0, 0
+    # exit application
+    tail  _exit
+
+.size   make_fcontext,.-make_fcontext
+# Mark that we don't need executable stack.
+.section .note.GNU-stack,"",%progbits
diff --git a/libs/context/src/asm/ontop_riscv64_sysv_elf_gas.S b/libs/context/src/asm/ontop_riscv64_sysv_elf_gas.S
new file mode 100644
index 00000000..61ab46bc
--- /dev/null
+++ b/libs/context/src/asm/ontop_riscv64_sysv_elf_gas.S
@@ -0,0 +1,149 @@
+/*
+   Distributed under the Boost Software License, Version 1.0.
+      (See accompanying file LICENSE_1_0.txt or copy at
+          http://www.boost.org/LICENSE_1_0.txt)
+*/
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
+ *  -------------------------------------------------  *
+ *  | 0x0 | 0x4 | 0x8 | 0xc | 0x10| 0x14| 0x18| 0x1c|  *
+ *  -------------------------------------------------  *
+ *  |    fs0    |    fs1    |    fs2    |    fs3    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
+ *  -------------------------------------------------  *
+ *  | 0x20| 0x24| 0x28| 0x2c| 0x30| 0x34| 0x38| 0x3c|  *
+ *  -------------------------------------------------  *
+ *  |    fs4    |    fs5    |    fs6    |    fs7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
+ *  -------------------------------------------------  *
+ *  | 0x40| 0x44| 0x48| 0x4c| 0x50| 0x54| 0x58| 0x5c|  *
+ *  -------------------------------------------------  *
+ *  |    fs8    |    fs9    |    fs10   |    fs11   |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
+ *  -------------------------------------------------  *
+ *  | 0x60| 0x64| 0x68| 0x6c| 0x70| 0x74| 0x78| 0x7c|  *
+ *  -------------------------------------------------  *
+ *  |    s0     |    s1     |    s2     |    s3     |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
+ *  -------------------------------------------------  *
+ *  | 0x80| 0x84| 0x88| 0x8c| 0x90| 0x94| 0x98| 0x9c|  *
+ *  -------------------------------------------------  *
+ *  |    s4     |    s5     |    s6     |     s7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  40 |  41 |  42 | 43  |  44 | 45  |  46 | 47  |  *
+ *  -------------------------------------------------  *
+ *  | 0xa0| 0xa4| 0xa8| 0xac| 0xb0| 0xb4| 0xb8| 0xbc|  *
+ *  -------------------------------------------------  *
+ *  |     s8    |     s9    |    s10    |    s11    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  48 |  49 |  50 | 51  |     |     |     |     |  *
+ *  -------------------------------------------------  *
+ *  | 0xc0| 0xc4| 0xc8| 0xcc|     |     |     |     |  *
+ *  -------------------------------------------------  *
+ *  |     ra    |     pc    |           |           |  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ *******************************************************/
+
+.file "ontop_riscv64_sysv_elf_gas.S"
+.text
+.align  1
+.global ontop_fcontext
+.type   ontop_fcontext, %function
+ontop_fcontext:
+    # prepare stack for GP + FPU
+    addi  sp, sp, -0xd0
+
+    # save fs0 - fs11
+    fsd  fs0, 0x00(sp)
+    fsd  fs1, 0x08(sp)
+    fsd  fs2, 0x10(sp)
+    fsd  fs3, 0x18(sp)
+    fsd  fs4, 0x20(sp)
+    fsd  fs5, 0x28(sp)
+    fsd  fs6, 0x30(sp)
+    fsd  fs7, 0x38(sp)
+    fsd  fs8, 0x40(sp)
+    fsd  fs9, 0x48(sp)
+    fsd  fs10, 0x50(sp)
+    fsd  fs11, 0x58(sp)
+
+    # save s0-s11, ra
+    sd  s0, 0x60(sp)
+    sd  s1, 0x68(sp)
+    sd  s2, 0x70(sp)
+    sd  s3, 0x78(sp)
+    sd  s4, 0x80(sp)
+    sd  s5, 0x88(sp)
+    sd  s6, 0x90(sp)
+    sd  s7, 0x98(sp)
+    sd  s8, 0xa0(sp)
+    sd  s9, 0xa8(sp)
+    sd  s10, 0xb0(sp)
+    sd  s11, 0xb8(sp)
+    sd  ra, 0xc0(sp)
+
+    # save RA as PC
+    sd  ra, 0xc8(sp)
+
+    # store SP (pointing to context-data) in A3
+    mv  a3, sp
+
+    # restore SP (pointing to context-data) from A0
+    mv  sp, a0
+
+    # load fs0 - fs11
+    fld  fs0, 0x00(sp)
+    fld  fs1, 0x08(sp)
+    fld  fs2, 0x10(sp)
+    fld  fs3, 0x18(sp)
+    fld  fs4, 0x20(sp)
+    fld  fs5, 0x28(sp)
+    fld  fs6, 0x30(sp)
+    fld  fs7, 0x38(sp)
+    fld  fs8, 0x40(sp)
+    fld  fs9, 0x48(sp)
+    fld  fs10, 0x50(sp)
+    fld  fs11, 0x58(sp)
+
+    # load s0-s11,ra
+    ld  s0, 0x60(sp)
+    ld  s1, 0x68(sp)
+    ld  s2, 0x70(sp)
+    ld  s3, 0x78(sp)
+    ld  s4, 0x80(sp)
+    ld  s5, 0x88(sp)
+    ld  s6, 0x90(sp)
+    ld  s7, 0x98(sp)
+    ld  s8, 0xa0(sp)
+    ld  s9, 0xa8(sp)
+    ld  s10, 0xb0(sp)
+    ld  s11, 0xb8(sp)
+    ld  ra, 0xc0(sp)
+
+    # return transfer_t from jump
+    # pass transfer_t as first arg in context function
+    # a0 == FCTX, a1 == DATA
+    mv a0, a3
+
+    # skip pc
+    # restore stack from GP + FPU
+    addi  sp, sp, 0xd0
+
+    # jump to ontop-function
+    jr a2
+.size   ontop_fcontext,.-ontop_fcontext
+# Mark that we don't need executable stack.
+.section .note.GNU-stack,"",%progbits
